:root {
    --color-white: #ffffff;
    --color-black: #000000;
    --color-primary: #cf57ff;
    --color-secondary: #e6a6ff;
    --color-tertiary: #ff661f;
    --color-highlighted: #fcc911;
    --color-success: #00bd59;
    --color-error: #fc1154;
    --color-gray-100: #fbfbfb;
    --color-gray-200: #e5e5e5;
    --color-gray-300: #ababab;
    --color-gray-400: #7c7c7c;
    --color-gray-500: #707070;
    --color-gray-600: #686868;
    --color-gray-700: #4a4a48;
    --color-gray-800: #383838;
    --color-gray-900: #161616;
    --font-base: 'TheSans', serif;
    --font-headline: 'TheSans', serif;
    --font-size-default: 1rem;
}

// screen sizes for use in media queries.
$grid-breakpoints: (
    sm: 640px,
    md: 768px,
    lg: 1024px,
    xl: 1280px,
    '2xl': 1921px,
    '3xl': 2560px,
    '4xl': 2800px
);

// maximum widths of container
$container-max-widths: (
    sm: 640px,
    md: 768px,
    lg: 1024px,
    xl: 1280px,
    '2xl': 1921px,
    '3xl': 2560px,
    '4xl': 2800px
);

$brand-theme-colors: ();
$brand-theme-colors: map-merge(
    (
        'black': (theme('colors.black')),
        'white': (theme('colors.white')),
        'primary': (theme('colors.primary')),
        'secondary': (theme('colors.secondary')),
        'tertiary': (theme('colors.tertiary')),
        'highlighted': (theme('colors.highlighted')),
        'success': (theme('colors.success')),
        'error': (theme('colors.error')),
        'gray100': (theme('colors.gray100')),
        'gray200': (theme('colors.gray200')),
        'gray300': (theme('colors.gray300')),
        'gray400': (theme('colors.gray400')),
        'gray500': (theme('colors.gray500')),
        'gray600': (theme('colors.gray600')),
        'gray700': (theme('colors.gray700')),
        'gray800': (theme('colors.gray800')),
        'gray900': (theme('colors.gray900'))
    ),
    $brand-theme-colors
);

@mixin media-max($max) {
    $breakpoint: #{map-get($grid-breakpoints, $max) - 1};
    @media (max-width: $breakpoint) {
        @content;
    }
}

@mixin media-min($min) {
    $breakpoint: #{map-get($grid-breakpoints, $min)};
    @media (min-width: $breakpoint) {
        @content;
    }
}

